{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api/auth.service.ts","webpack:///./src/app/api/building.service.ts","webpack:///./src/app/api/payement.service.ts","webpack:///./src/app/api/resident.service.ts","webpack:///./src/app/api/suggestion.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/building-details/building-details.component.css","webpack:///./src/app/building-details/building-details.component.html","webpack:///./src/app/building-details/building-details.component.ts","webpack:///./src/app/building-details/payments/payments.component.css","webpack:///./src/app/building-details/payments/payments.component.html","webpack:///./src/app/building-details/payments/payments.component.ts","webpack:///./src/app/building-details/residents/residents.component.css","webpack:///./src/app/building-details/residents/residents.component.html","webpack:///./src/app/building-details/residents/residents.component.ts","webpack:///./src/app/building-details/suggestions/suggestions.component.css","webpack:///./src/app/building-details/suggestions/suggestions.component.html","webpack:///./src/app/building-details/suggestions/suggestions.component.ts","webpack:///./src/app/building-list/building-list.component.css","webpack:///./src/app/building-list/building-list.component.html","webpack:///./src/app/building-list/building-list.component.ts","webpack:///./src/app/building/building.component.css","webpack:///./src/app/building/building.component.html","webpack:///./src/app/building/building.component.ts","webpack:///./src/app/landing-page/landing-page.component.css","webpack:///./src/app/landing-page/landing-page.component.html","webpack:///./src/app/landing-page/landing-page.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/not-found-page/not-found-page.component.css","webpack:///./src/app/not-found-page/not-found-page.component.html","webpack:///./src/app/not-found-page/not-found-page.component.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ2C;AACO;AAEW;AAErD,iGAAU,CAAiB;AAKnC;IAGE,qBACU,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAC5B,CAAC;IAEP,sBAAsB;IACtB,2BAAK,GAAL;QAAA,iBAYC;QAXC,MAAM,CAAC,IAAI,CAAC,UAAU;aACnB,GAAG,CACC,UAAU,oBAAiB,EAC9B,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,8BAA8B;SACzD;aACA,SAAS,EAAE;aACX,IAAI,CAAC,UAAC,QAAa;YAClB,yDAAyD;YACzD,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC;YACpC,MAAM,CAAC,QAAQ,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kBAAkB;IAClB,+BAAS,GAAT,UAAU,SAA0B;QAApC,iBAaC;QAZC,MAAM,CAAC,IAAI,CAAC,UAAU;aACnB,IAAI,CACA,UAAU,eAAY,EACzB,SAAS,EACT,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,8BAA8B;SACzD;aACA,SAAS,EAAE;aACX,IAAI,CAAC,UAAC,QAAa;YAClB,iDAAiD;YACjD,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC;YACpC,MAAM,CAAC,QAAQ,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mBAAmB;IACnB,gCAAU,GAAV,UAAW,UAA4B;QAAvC,iBAaC;QAZC,MAAM,CAAC,IAAI,CAAC,UAAU;aACnB,IAAI,CACA,UAAU,gBAAa,EAC1B,UAAU,EACV,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,8BAA8B;SACzD;aACA,SAAS,EAAE;aACX,IAAI,CAAC,UAAC,QAAa;YAClB,kDAAkD;YAClD,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC;YACpC,MAAM,CAAC,QAAQ,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qBAAqB;IACrB,4BAAM,GAAN;QAAA,iBAYC;QAXC,MAAM,CAAC,IAAI,CAAC,UAAU;aACnB,MAAM,CACF,UAAU,gBAAa,EAC1B,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,8BAA8B;SACzD;aACA,SAAS,EAAE;aACX,IAAI,CAAC,UAAC,QAAa;YAClB,kDAAkD;YAClD,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC;YACpC,MAAM,CAAC,QAAQ,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;IAnEY,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAKsB,+DAAU;OAJrB,WAAW,CAoEvB;IAAD,kBAAC;CAAA;AApEuB;AAsExB;IAAA;IAOA,CAAC;IAAD,WAAC;AAAD,CAAC;;AAED;IAAA;IAGA,CAAC;IAAD,sBAAC;AAAD,CAAC;;AAED;IAAA;IAKA,CAAC;IAAD,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnG0C;AACO;AAGW;AAErD,iGAAU,CAAiB;AAKnC;IAEE,yBACU,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAC5B,CAAC;IAGL,qBAAqB;IACrB,yCAAe,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,UAAU;aACnB,GAAG,CACC,UAAU,mBAAgB,EAC7B,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,8BAA8B;SACzD;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,wBAAwB;IACxB,yCAAe,GAAf,UAAgB,EAAE;QAChB,4EAA4E;QAC5E,MAAM,CAAC,IAAI,CAAC,UAAU;aACnB,GAAG,CACC,UAAU,sBAAiB,EAAI,EAClC,EAAE,eAAe,EAAE,IAAI,EAAE,CAC1B;aACA,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,2BAA2B;IAC3B,4CAAkB,GAAlB,UAAmB,EAAE;QACnB,4EAA4E;QAC5E,MAAM,CAAC,IAAI,CAAC,UAAU;aACnB,MAAM,CACF,UAAU,sBAAiB,EAAI,EAClC,EAAE,eAAe,EAAE,IAAI,EAAE,CAC1B;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,aAAa;IACb,sCAAY,GAAZ,UAAa,YAAgC;QAC3C,4EAA4E;QAC5E,MAAM,CAAC,IAAI,CAAC,UAAU;aACnB,IAAI,CACA,UAAU,mBAAgB,EAC7B,YAAY,EACZ,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,8BAA8B;SACzD;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;IAjDY,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIsB,+DAAU;OAHrB,eAAe,CAoD3B;IAAD,sBAAC;CAAA;AApD2B;AAsD5B;IAAA;IAUA,CAAC;IAAD,eAAC;AAAD,CAAC;;AAED;IAAA;IAOA,CAAC;IAAD,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpF0C;AACO;AACW;AAGrD,iGAAU,CAAiB;AAKnC;IAME,yBACU,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAC5B,CAAC;IAEL,qBAAqB;IACrB,yCAAe,GAAf;QACE,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,UAAU;aACnB,GAAG,CACC,UAAU,uBAAkB,UAAY,EAC3C,EAAE,eAAe,EAAE,IAAI,EAAE,CAC1B;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,wBAAwB;IACxB,yCAAe,GAAf,UAAgB,EAAE;QAChB,4EAA4E;QAC5E,MAAM,CAAC,IAAI,CAAC,UAAU;aACnB,GAAG,CACC,UAAU,sBAAiB,EAAI,EAClC,EAAE,eAAe,EAAE,IAAI,EAAE,CAC1B;aACA,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,2BAA2B;IAC3B,4CAAkB,GAAlB,UAAmB,EAAE;QACnB,4EAA4E;QAC5E,MAAM,CAAC,IAAI,CAAC,UAAU;aACnB,MAAM,CACF,UAAU,sBAAiB,EAAI,EAClC,EAAE,eAAe,EAAE,IAAI,EAAE,CAC1B;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,aAAa;IACb,sCAAY,GAAZ,UAAa,YAAgC;QAC3C,4EAA4E;QAC5E,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,UAAU;aACnB,IAAI,CACA,UAAU,mBAAgB,EAC7B,EAAE,YAAY,gBAAE,UAAU,cAAE,EAC5B,EAAE,eAAe,EAAE,IAAI,EAAE,CAC1B;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,uCAAa,GAAb,UAAc,UAAU;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IA1DY,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAQsB,+DAAU;OAPrB,eAAe,CA6D3B;IAAD,sBAAC;CAAA;AA7D2B;AA+D5B;IAAA;IAMA,CAAC;IAAD,eAAC;AAAD,CAAC;;AAED;IAAA;IAGA,CAAC;IAAD,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpF0C;AACO;AAEW;AAErD,iGAAU,CAAiB;AAKnC;IAIE,yBACU,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAC5B,CAAC;IAEL,qBAAqB;IACrB,yCAAe,GAAf;QACE,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,UAAU;aACnB,GAAG,CACC,UAAU,uBAAkB,UAAY,EAC3C,EAAE,eAAe,EAAE,IAAI,EAAE,CAC1B;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,wBAAwB;IACxB,yCAAe,GAAf,UAAgB,EAAE;QAChB,4EAA4E;QAC5E,MAAM,CAAC,IAAI,CAAC,UAAU;aACnB,GAAG,CACC,UAAU,sBAAiB,EAAI,EAClC,EAAE,eAAe,EAAE,IAAI,EAAE,CAC1B;aACA,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,2BAA2B;IAC3B,4CAAkB,GAAlB,UAAmB,EAAE;QACnB,4EAA4E;QAC5E,MAAM,CAAC,IAAI,CAAC,UAAU;aACnB,MAAM,CACF,UAAU,sBAAiB,EAAI,EAClC,EAAE,eAAe,EAAE,IAAI,EAAE,CAC1B;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,aAAa;IACb,sCAAY,GAAZ,UAAa,YAAgC;QAC3C,4EAA4E;QAC5E,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,UAAU;aACnB,IAAI,CACA,UAAU,mBAAgB,EAC7B,EAAE,YAAY,gBAAE,UAAU,cAAE,EAC5B,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,8BAA8B;SACzD;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,uCAAa,GAAb,UAAc,UAAU;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAxDY,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAMsB,+DAAU;OALrB,eAAe,CA0D3B;IAAD,sBAAC;CAAA;AA1D2B;AA4D5B;IAAA;IAOA,CAAC;IAAD,eAAC;AAAD,CAAC;;AAED;IAAA;IAIA,CAAC;IAAD,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnF0C;AACO;AACW;AAGrD,iGAAU,CAAiB;AAKnC;IAIE,2BACU,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAC5B,CAAC;IAEL,qBAAqB;IACrB,6CAAiB,GAAjB;QACE,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,UAAU;aACnB,GAAG,CACC,UAAU,yBAAoB,UAAY,EAC7C,EAAE,eAAe,EAAE,IAAI,EAAE,CAC1B;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,wBAAwB;IACxB,6CAAiB,GAAjB,UAAkB,EAAE;QAClB,4EAA4E;QAC5E,MAAM,CAAC,IAAI,CAAC,UAAU;aACnB,GAAG,CACC,UAAU,wBAAmB,EAAI,EACpC,EAAE,eAAe,EAAE,IAAI,EAAE,CAC1B;aACA,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,2BAA2B;IAC3B,gDAAoB,GAApB,UAAqB,EAAE;QACrB,4EAA4E;QAC5E,MAAM,CAAC,IAAI,CAAC,UAAU;aACnB,MAAM,CACF,UAAU,wBAAmB,EAAI,EACpC,EAAE,eAAe,EAAE,IAAI,EAAE,CAC1B;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,aAAa;IACb,0CAAc,GAAd,UAAe,cAAoC;QACjD,4EAA4E;QAC5E,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,UAAU;aACnB,IAAI,CACA,UAAU,qBAAkB,EAC/B,EAAE,cAAc,kBAAE,UAAU,cAAE,EAC9B,EAAE,eAAe,EAAE,IAAI,EAAE,CAC1B;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,yCAAa,GAAb,UAAc,UAAU;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAxDY,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAMsB,+DAAU;OALrB,iBAAiB,CA0D7B;IAAD,wBAAC;CAAA;AA1D6B;AA6D9B;IAAA;IAOA,CAAC;IAAD,iBAAC;AAAD,CAAC;;AAED;IAAA;IAIA,CAAC;IAAD,2BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpFwC;AACc;AAGW;AACW;AACK;AACzB;AACG;AAC6B;AACT;AAIhF,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,yFAAoB,EAAE;IAC7C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,4FAAqB,EAAE;IAClE,EAAE,IAAI,EAAE,sBAAsB,EAAE,SAAS,EAAE,qGAAwB,EAAE;IACrE,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,8FAAqB,EAAE;CACjD,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AC5B7B,+BAA+B,mBAAmB,GAAG,OAAO,4BAA4B,mBAAmB,sBAAsB,GAAG,uBAAuB,uBAAuB,iBAAiB,gBAAgB,IAAI,wBAAwB,mBAAmB,GAAG,WAAW,wBAAwB,GAAG,C;;;;;;;;;;;ACA3S,yeAAye,kCAAkC,u0BAAu0B,kCAAkC,uO;;;;;;;;;;;;;;;;;;;;;;;;;;ACA10C;AACO;AACR;AASzC;IAGE,sBACS,UAAuB,EACtB,YAAoB;QADrB,eAAU,GAAV,UAAU,CAAa;QACtB,iBAAY,GAAZ,YAAY,CAAQ;QAJ9B,UAAK,GAAG,KAAK,CAAC;IAKV,CAAC;IAEL,+BAAQ,GAAR;QACE,kEAAkE;QAClE,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;aACpB,KAAK,CAAC,UAAC,GAAG;YACT,KAAK,CAAC,gEAAgE,CAAC,CAAC;YACxE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kCAAW,GAAX;QAAA,iBASD;QARG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;aACvB,IAAI,CAAC;YACJ,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACvC,CAAC,CAAC;aACC,KAAK,CAAC,UAAC,GAAG;YACT,KAAK,CAAC,kDAAkD,CAAC,CAAC;YAC1D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IA1BY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAKqB,6DAAW;YACR,sDAAM;OALnB,YAAY,CA2BxB;IAAD,mBAAC;CAAA;AA3BwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXiC;AACjB;AACI;AACW;AACuB;AACvB;AAGA;AACT;AACI;AACS;AACH;AACyB;AACL;AACX;AACuB;AACT;AACK;AACG;AACK;AA6B7F;IAAA;IAAyB,CAAC;IAAb,SAAS;QA1BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,wEAAe;gBACf,sEAAc;gBACd,0FAAoB;gBACpB,+EAAiB;gBACjB,sGAAwB;gBACxB,6FAAqB;gBACrB,gGAAiB;gBACjB,mGAAkB;gBAClB,yGAAoB;gBACpB,+FAAqB;aACtB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;gBACX,qEAAgB;gBAChB,4FAAuB;gBACvB,qEAAgB;gBAChB,+DAAc;aACf;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACjDtB,yBAAyB,wBAAwB,GAAG,mBAAmB,sBAAsB,GAAG,C;;;;;;;;;;;ACAhG,qQAAqQ,sBAAsB,yIAAyI,wBAAwB,uEAAuE,+BAA+B,uFAAuF,8BAA8B,8FAA8F,uBAAuB,gZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1tB;AACO;AAGW;AACV;AACI;AACJ;AAQ1D;IAKE,kCACU,oBAAoC,EACpC,cAA+B,EAC/B,YAAoB,EACpB,UAA2B,EAC3B,UAA2B,EAC3B,YAA+B;QAL/B,yBAAoB,GAApB,oBAAoB,CAAgB;QACpC,mBAAc,GAAd,cAAc,CAAiB;QAC/B,iBAAY,GAAZ,YAAY,CAAQ;QACpB,eAAU,GAAV,UAAU,CAAiB;QAC3B,eAAU,GAAV,UAAU,CAAiB;QAC3B,iBAAY,GAAZ,YAAY,CAAmB;IACrC,CAAC;IAEL,2CAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,oBAAoB,CAAC,QAAQ;aAC/B,SAAS,CAAC,UAAC,QAAQ;YAClB,2CAA2C;YAC3C,wCAAwC;YACxC,KAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YACrC,KAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC;YACvC,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC;YACzC,KAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC;YACvC,KAAI,CAAC,oBAAoB,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uDAAoB,GAApB;QAAA,iBAUC;QATC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC;aACzC,IAAI,CAAC,UAAC,QAAkB;YACvB,wDAAwD;YACxD,KAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QAC/B,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAG;YACT,KAAK,CAAC,+DAA+D,CAAC,CAAC;YACvE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sDAAmB,GAAnB;QAAA,iBAeD;QAdW,qCAAM,CAAuB;QACrC,IAAM,MAAM,GAAG,OAAO,CAAC,qBAAmB,MAAM,MAAG,CAAC,CAAC;QAErD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC;iBAC5C,IAAI,CAAC;gBACJ,iCAAiC;gBACjC,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;YAC/C,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,GAAG;gBACT,KAAK,CAAC,sDAAsD,CAAC,CAAC;gBAC9D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAtDY,wBAAwB;QANpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAQgC,8DAAc;YACpB,qEAAe;YACjB,sDAAM;YACR,qEAAe;YACf,qEAAe;YACb,yEAAiB;OAX9B,wBAAwB,CAwDpC;IAAD,+BAAC;CAAA;AAxDoC;;;;;;;;;;;;ACfrC,mB;;;;;;;;;;;ACAA,siCAAsiC,cAAc,yBAAyB,oBAAoB,whCAAwhC,kBAAkB,gCAAgC,mBAAmB,wCAAwC,4BAA4B,iBAAiB,sBAAsB,0KAA0K,2BAA2B,wCAAwC,oBAAoB,uCAAuC,mBAAmB,6eAA6e,2BAA2B,6BAA6B,oBAAoB,kCAAkC,qBAAqB,qmB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlqG;AACO;AACkC;AACpB;AAOvE;IASE,2BACU,cAA+B,EAC/B,YAAoB,EACpB,cAA+B;QAF/B,mBAAc,GAAd,cAAc,CAAiB;QAC/B,iBAAY,GAAZ,YAAY,CAAQ;QACpB,mBAAc,GAAd,cAAc,CAAiB;QAVzC,aAAQ,GAAuB,IAAI,wEAAkB,EAAE,CAAC;QACxD,cAAS,GAAoB,EAAE,CAAC;QAEhC,cAAS,GAAoB,EAAE,CAAC;IAQ5B,CAAC;IAEL,oCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,uCAAW,GAAX,UAAY,KAAK,EAAE,GAAU;QAAV,gCAAU;QAC3B,EAAE,EAAC,GAAG,CAAC,EAAC;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACvB,CAAC;QACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,0CAAc,GAAd;QAAA,iBAUC;QATC,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE;aACpC,IAAI,CAAC,UAAC,QAAyB;YAC9B,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;QAC9B,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAG;YACT,KAAK,CAAC,kDAAkD,CAAC,CAAC;YAC1D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAc,GAAd;QAAA,iBAYC;QAXC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,sCAAsC;QACtC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC;aAC5C,IAAI,CAAC,UAAC,QAAkB;YACvB,KAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAG;YACT,KAAK,CAAC,0DAA0D,CAAC,CAAC;YAClE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IAChC,CAAC;IAED,0CAAc,GAAd;QAAA,iBAUC;QATC,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE;aACnC,IAAI,CAAC,UAAC,QAAyB;YAC/B,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;QAC7B,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAG;YACV,KAAK,CAAC,kDAAkD,CAAC,CAAC;YAC1D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;IACN,CAAC;IAED,2CAAe,GAAf,UAAiB,EAAE;QACjB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IACxC,CAAC;IApEU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAW0B,qEAAe;YACjB,sDAAM;YACJ,qEAAe;OAZ9B,iBAAiB,CAsE7B;IAAD,wBAAC;CAAA;AAtE6B;;;;;;;;;;;;ACV9B,mB;;;;;;;;;;;ACAA,+4DAA+4D,oBAAoB,sBAAsB,mBAAmB,wCAAwC,gBAAgB,ikGAAikG,kBAAkB,kCAAkC,mBAAmB,0CAA0C,4BAA4B,mBAAmB,sBAAsB,oLAAoL,oBAAoB,oCAAoC,mBAAmB,qCAAqC,gBAAgB,2gBAA2gB,oBAAoB,+BAA+B,mBAAmB,+BAA+B,gBAAgB,8tCAA8tC,oBAAoB,uBAAuB,mBAAmB,oV;;;;;;;;;;;;;;;;;;;;;;;;;;ACAz5O;AACO;AACkC;AAS3F;IAQE,4BACU,oBAAoC,EACpC,cAA+B,EAC/B,YAAoB;QAFpB,yBAAoB,GAApB,oBAAoB,CAAgB;QACpC,mBAAc,GAAd,cAAc,CAAiB;QAC/B,iBAAY,GAAZ,YAAY,CAAQ;QAV/B,aAAQ,GAAuB,IAAI,wEAAkB,EAAE,CAAC;QACxD,cAAS,GAAoB,EAAE,CAAC;IAU3B,CAAC;IAEL,qCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,qCAAqC;QACrC,6BAA6B;QAC7B,6CAA6C;QAC7C,uCAAuC;QACvC,qCAAqC;QACrC,MAAM;IACR,CAAC;IAED,wCAAW,GAAX,UAAY,KAAK,EAAE,GAAU;QAAV,gCAAU;QAC3B,EAAE,EAAC,GAAG,CAAC,EAAC;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACvB,CAAC;QACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,2CAAc,GAAd;QAAA,iBAUC;QATC,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE;aACnC,IAAI,CAAC,UAAC,QAAyB;YAC/B,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;QAC7B,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAG;YACV,KAAK,CAAC,kDAAkD,CAAC,CAAC;YAC1D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;IACN,CAAC;IAGD,2CAAc,GAAd;QAAA,iBAWC;QAVC,sCAAsC;QACtC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC;aAC5C,IAAI,CAAC,UAAC,QAAkB;YACvB,KAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAG;YACT,KAAK,CAAC,0DAA0D,CAAC,CAAC;YAClE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IAChC,CAAC;IAGD,2CAAc,GAAd,UAAgB,EAAE;QAAlB,iBAQC;QAPC,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAE,EAAE,CAAE;aAC3C,IAAI,CAAC;YACN,KAAI,CAAC,cAAc,EAAE,CAAC;QACtB,CAAC,CAAC;aACD,KAAK,CAAC,UAAE,GAAG;YACV,OAAO,CAAC,GAAG,CAAE,GAAG,CAAE,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAnEU,kBAAkB;QAN9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAWgC,8DAAc;YACpB,qEAAe;YACjB,sDAAM;OAXnB,kBAAkB,CAqE9B;IAAD,yBAAC;CAAA;AArE8B;;;;;;;;;;;;ACX/B,mB;;;;;;;;;;;ACAA,sgCAAsgC,cAAc,uBAAuB,oBAAoB,4PAA4P,wBAAwB,qBAAqB,mCAAmC,0hDAA0hD,cAAc,2BAA2B,oBAAoB,wwBAAwwB,kBAAkB,gCAAgC,mBAAmB,wCAAwC,4BAA4B,iBAAiB,sBAAsB,2KAA2K,wBAAwB,kCAAkC,qBAAqB,mCAAmC,mCAAmC,2eAA2e,wBAAwB,6BAA6B,qBAAqB,6BAA6B,mCAAmC,uoB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7xJ;AACO;AAC0C;AAC5B;AAOvE;IASE,8BACU,gBAAmC,EACnC,YAAoB,EACpB,cAA+B;QAF/B,qBAAgB,GAAhB,gBAAgB,CAAmB;QACnC,iBAAY,GAAZ,YAAY,CAAQ;QACpB,mBAAc,GAAd,cAAc,CAAiB;QAVzC,aAAQ,GAAyB,IAAI,4EAAoB,EAAE,CAAC;QAC5D,gBAAW,GAAsB,EAAE,CAAC;QAEpC,cAAS,GAAoB,EAAE,CAAC;IAQ5B,CAAC;IAEL,uCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,0CAAW,GAAX,UAAY,KAAK,EAAE,GAAU;QAAV,gCAAU;QAC3B,EAAE,EAAC,GAAG,CAAC,EAAC;YACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACvB,CAAC;QACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,+CAAgB,GAAhB;QAAA,iBAUC;QATC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE;aACxC,IAAI,CAAC,UAAC,QAA2B;YAChC,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;QAChC,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAG;YACT,KAAK,CAAC,oDAAoD,CAAC,CAAC;YAC5D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAgB,GAAhB;QAAA,iBAYC;QAXC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,sCAAsC;QACtC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC;aAChD,IAAI,CAAC,UAAC,QAAoB;YACzB,KAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAG;YACT,KAAK,CAAC,0DAA0D,CAAC,CAAC;YAClE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IAChC,CAAC;IAED,6CAAc,GAAd;QAAA,iBAUC;QATC,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE;aACnC,IAAI,CAAC,UAAC,QAAyB;YAC/B,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;QAC7B,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAG;YACV,KAAK,CAAC,kDAAkD,CAAC,CAAC;YAC1D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;IACN,CAAC;IAED,6CAAc,GAAd,UAAe,EAAE;IAEjB,CAAC;IAED,8CAAe,GAAf,UAAiB,EAAE;QACjB,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IAC1C,CAAC;IAxEU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAW4B,yEAAiB;YACrB,sDAAM;YACJ,qEAAe;OAZ9B,oBAAoB,CA0EhC;IAAD,2BAAC;CAAA;AA1EgC;;;;;;;;;;;;ACVjC,yBAAyB,sBAAsB,yBAAyB,GAAG,C;;;;;;;;;;;ACA3E,ulE;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACT;AAC+C;AASxF;IAKE,+BACU,cAA+B,EAC/B,YAAoB;QADpB,mBAAc,GAAd,cAAc,CAAiB;QAC/B,iBAAY,GAAZ,YAAY,CAAQ;QAL9B,cAAS,GAAoB,EAAE,CAAC;QAChC,aAAQ,GAAuB,IAAI,wEAAkB,EAAE,CAAC;IAKpD,CAAC;IAEL,wCAAQ,GAAR;IAEA,CAAC;IAED,8CAAc,GAAd;QAAA,iBAYC;QAXC,sCAAsC;QACtC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC;aAC5C,IAAI,CAAC,UAAC,QAAkB;YACvB,4BAA4B;YAC5B,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QAC/C,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAG;YACT,KAAK,CAAC,yDAAyD,CAAC,CAAC;YACjE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IA1BU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAO0B,qEAAe;YACjB,sDAAM;OAPnB,qBAAqB,CA4BjC;IAAD,4BAAC;CAAA;AA5BiC;;;;;;;;;;;;ACXlC,mCAAmC,oBAAoB,sBAAsB,KAAK,qBAAqB,kBAAkB,mBAAmB,sBAAsB,oBAAoB,wDAAwD,0BAA0B,sBAAsB,KAAK,qBAAqB,uBAAuB,KAAK,O;;;;;;;;;;;ACApV,utBAAutB,oBAAoB,yDAAyD,sBAAsB,+qB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxwB;AACT;AAC+C;AAC9B;AACI;AACJ;AAU1D;IAIE,2BACU,cAA+B,EAC/B,YAAoB,EACpB,cAA+B,EAC/B,gBAAmC,EACnC,cAA+B;QAJ/B,mBAAc,GAAd,cAAc,CAAiB;QAC/B,iBAAY,GAAZ,YAAY,CAAQ;QACpB,mBAAc,GAAd,cAAc,CAAiB;QAC/B,qBAAgB,GAAhB,gBAAgB,CAAmB;QACnC,mBAAc,GAAd,cAAc,CAAiB;QARxC,cAAS,GAAoB,EAAE,CAAC;QAChC,aAAQ,GAAuB,IAAI,wEAAkB,EAAE,CAAC;IAQrD,CAAC;IAEL,oCAAQ,GAAR;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,0CAAc,GAAd;QAAA,iBAUC;QATC,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE;aAClC,IAAI,CAAC,UAAC,QAAyB;YAC9B,wDAAwD;YACxD,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC5B,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAG;YACT,KAAK,CAAC,kDAAkD,CAAC,CAAC;YAC1D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAe,GAAf,UAAiB,EAAE;QACjB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QACxC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IACxC,CAAC;IAhCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAM0B,qEAAe;YACjB,sDAAM;YACJ,qEAAe;YACb,yEAAiB;YACnB,qEAAe;OAT9B,iBAAiB,CAkC7B;IAAD,wBAAC;CAAA;AAlC6B;;;;;;;;;;;;ACf9B,iHAAiH,aAAa,mGAAmG,6BAA6B,oBAAoB,wBAAwB,yBAAyB,KAAK,YAAY,kBAAkB,uBAAuB,yBAAyB,gBAAgB,uBAAuB,QAAQ,qBAAqB,yBAAyB,gCAAgC,mBAAmB,KAAK,YAAY,yBAAyB,KAAK,gCAAgC,qBAAqB,uBAAuB,qBAAqB,yBAAyB,KAAK,QAAQ,uBAAuB,yBAAyB,KAAK,iBAAiB,gCAAgC,kBAAkB,KAAK,OAAO,cAAc,eAAe,GAAG,UAAU,sCAAsC,oBAAoB,uBAAuB,qBAAqB,GAAG,wBAAwB,sCAAsC,GAAG,QAAQ,gBAAgB,mBAAmB,qBAAqB,uBAAuB,sCAAsC,8BAA8B,GAAG,QAAQ,qBAAqB,0BAA0B,wBAAwB,GAAG,QAAQ,qBAAqB,GAAG,eAAe,wCAAwC,yCAAyC,gBAAgB,mBAAmB,oCAAoC,mBAAmB,0BAA0B,wBAAwB,uBAAuB,uBAAuB,0BAA0B,iBAAiB,GAAG,gBAAgB,mBAAmB,oBAAoB,kBAAkB,GAAG,eAAe,gBAAgB,GAAG,UAAU,gBAAgB,GAAG,YAAY,eAAe,GAAG,iBAAiB,iBAAiB,GAAG,kBAAkB,2BAA2B,wBAAwB,2BAA2B,oCAAoC,qBAAqB,sBAAsB,kBAAkB,uBAAuB,eAAe,GAAG,uBAAuB,iBAAiB,GAAG,yBAAyB,qBAAqB,sBAAsB,uBAAuB,iBAAiB,cAAc,2BAA2B,eAAe,GAAG,wBAAwB,mBAAmB,qBAAqB,qBAAqB,uBAAuB,GAAG,qBAAqB,qBAAqB,wBAAwB,GAAG,6CAA6C,kCAAkC,sBAAsB,GAAG,0BAA0B,qBAAqB,wBAAwB,uBAAuB,eAAe,GAAG,gCAAgC,mBAAmB,sBAAsB,qBAAqB,GAAG,8DAA8D,iBAAiB,kBAAkB,iBAAiB,gBAAgB,GAAG,iCAAiC,qBAAqB,2BAA2B,gBAAgB,qBAAqB,iBAAiB,GAAG,aAAa,qBAAqB,wBAAwB,qBAAqB,uBAAuB,GAAG,sBAAsB,uBAAuB,qBAAqB,wBAAwB,GAAG,6BAA6B,0BAA0B,GAAG,mBAAmB,6BAA6B,0BAA0B,GAAG,wBAAwB,kBAAkB,iBAAiB,eAAe,GAAG,I;;;;;;;;;;;ACA56G,qjH;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,uCAAQ,GAAR;IACA,CAAC;IALU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;;OACW,oBAAoB,CAOhC;IAAD,2BAAC;CAAA;AAPgC;;;;;;;;;;;;ACPjC,8BAA8B,uBAAuB,GAAG,oBAAoB,mBAAmB,KAAK,WAAW,sBAAsB,yBAAyB,GAAG,C;;;;;;;;;;;ACAjK,+qB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACT;AAE0B;AAOnE;IAGE,wBACS,UAAuB,EACvB,YAAoB;QADpB,eAAU,GAAV,UAAU,CAAa;QACvB,iBAAY,GAAZ,YAAY,CAAQ;QAJ7B,cAAS,GAAoB,IAAI,iEAAe,EAAE,CAAC;IAK/C,CAAC;IAEL,iCAAQ,GAAR;IACA,CAAC;IAGD,oCAAW,GAAX;QAAA,iBAWD;QAVG,sCAAsC;QACtC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC;aACtC,IAAI,CAAC,UAAC,QAAQ;YACb,iCAAiC;YACjC,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QAC/C,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAG;YACT,KAAK,CAAC,gDAAgD,CAAC,CAAC;YACxD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IAvBY,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAKqB,6DAAW;YACT,sDAAM;OALlB,cAAc,CAyB1B;IAAD,qBAAC;CAAA;AAzB0B;;;;;;;;;;;;;;;;;;;;;;;ACVc;AASd;AAO3B;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAJ1B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,iEAAe,EAAE,+DAAa,EAAE,oEAAkB,EAAE,gEAAc,EAAE,+DAAa,EAAE,kEAAgB,EAAE,+DAAa,CAAC;YAC7H,OAAO,EAAE,CAAC,iEAAe,EAAE,+DAAa,EAAE,oEAAkB,EAAE,gEAAc,EAAE,+DAAa,EAAE,kEAAgB,EAAE,+DAAa,CAAC;SAC9H,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;AChB3B,mB;;;;;;;;;;;ACAA,uD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;ACPlC,kCAAkC,mBAAmB,KAAK,iBAAiB,sBAAsB,yBAAyB,C;;;;;;;;;;;ACA1H,2pCAA2pC,yBAAyB,kK;;;;;;;;;;;;;;;;;;;;;;;;;;ACAloC;AACT;AAI2B;AAQpE;IAGE,yBACS,UAAuB,EACtB,YAAoB;QADrB,eAAU,GAAV,UAAU,CAAa;QACtB,iBAAY,GAAZ,YAAY,CAAQ;QAJ9B,eAAU,GAAqB,IAAI,kEAAgB,EAAE,CAAC;IAKlD,CAAC;IAEL,kCAAQ,GAAR;IACA,CAAC;IAED,sCAAY,GAAZ;QAAA,iBAWC;QAVC,sCAAsC;QACtC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC;aACxC,IAAI,CAAC,UAAC,QAAQ;YACb,iCAAiC;YACjC,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QAC/C,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAG;YACT,KAAK,CAAC,oCAAoC,CAAC,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAtBU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAKqB,6DAAW;YACR,sDAAM;OALnB,eAAe,CAuB3B;IAAD,sBAAC;CAAA;AAvB2B;;;;;;;;;;;;;;ACb5B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,UAAU,EAAE,uBAAuB;CACpC,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;ACfjD;AAC6B;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'; \n\nimport { environment } from \"../../environments/environment\";\n\nconst { backendUrl } = environment;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  currentUser: User;\n\n  constructor(\n    private myHttpServ: HttpClient\n  ) { }\n\n// GET /api/checklogin\ncheck() {\n  return this.myHttpServ\n    .get(\n      `${backendUrl}/api/checklogin`,\n      { withCredentials: true } // send cookies across domains\n    )\n    .toPromise()\n    .then((response: any) => {\n      // update \"currentUser\" to match what the backend reports\n      this.currentUser = response.userDoc;\n      return response;\n    });\n}\n\n// POST /api/login\npostLogin(loginInfo: LoginSubmission) {\n  return this.myHttpServ\n    .post(\n      `${backendUrl}/api/login`,\n      loginInfo,\n      { withCredentials: true } // send cookies across domains\n    )\n    .toPromise()\n    .then((response: any) => {\n      // update \"currentUser\" if we log in successfully\n      this.currentUser = response.userDoc;\n      return response;\n    });\n}\n\n// POST /api/signup\npostSignup(signupInfo: SignupSubmission) {\n  return this.myHttpServ\n    .post(\n      `${backendUrl}/api/signup`,\n      signupInfo,\n      { withCredentials: true } // send cookies across domains\n    )\n    .toPromise()\n    .then((response: any) => {\n      // update \"currentUser\" if we sign up successfully\n      this.currentUser = response.userDoc;\n      return response;\n    });\n}\n\n// DELETE /api/logout\nlogout() {\n  return this.myHttpServ\n    .delete(\n      `${backendUrl}/api/logout`,\n      { withCredentials: true } // send cookies across domains\n    )\n    .toPromise()\n    .then((response: any) => {\n      // update \"currentUser\" if we log out successfully\n      this.currentUser = response.userDoc;\n      return response;\n    });\n}\n}\n\nexport class User {\n_id: string;\nfirstName: string;\nlastName: string;\nemail: string;\ncreatedAt: string;\nupdatedAt: string;\n}\n\nexport class LoginSubmission {\nemail: string;\nloginPassword: string;\n}\n\nexport class SignupSubmission {\nfirstName: string;\nlastName: string;\nemail: string;\noriginalPassword: string;\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport { environment } from \"../../environments/environment\";\n\nconst { backendUrl } = environment;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BuildingService {\n\n  constructor(\n    private myHttpServ: HttpClient\n  ) { }\n\n\n  // GET /api/buildings\n  getBuildingList() {\n    return this.myHttpServ\n      .get(\n        `${backendUrl}/api/buildings`,\n        { withCredentials: true } // send cookies across domains\n      )\n      .toPromise();\n  }\n\n  // GET /api/building/:id\n  getBuildingItem(id) {\n    // return the Promise of the request (component will \".then()\" & \".catch()\")\n    return this.myHttpServ\n      .get(\n        `${backendUrl}/api/building/${id}`,\n        { withCredentials: true } \n      )\n      .toPromise();\n}\n\n// DELETE /api/building/:id\ndeleteBuildingItem(id) {\n  // return the Promise of the request (component will \".then()\" & \".catch()\")\n  return this.myHttpServ\n    .delete(\n      `${backendUrl}/api/building/${id}`,\n      { withCredentials: true } \n    )\n    .toPromise();\n}\n\n// POST /api/\npostBuilding(buildingInfo: BuildingSubmission) {\n  // return the Promise of the request (component will \".then()\" & \".catch()\")\n  return this.myHttpServ\n    .post(\n      `${backendUrl}/api/buildings`,\n      buildingInfo,\n      { withCredentials: true } // send cookies across domains\n    )\n    .toPromise();\n}\n\n\n}\n\nexport class Building {\n  _id: string;\n  adress: string;\n  promoter: string;\n  dateOfoperation: string;\n  budgetDisposed: number;\n  dueDate: Date;\n  image: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport class BuildingSubmission {\n  adress: string;\n  promoter: string;\n  dateOfoperation: string;\n  budgetDisposed: number;\n  dueDate: Date;\n  image: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Resident } from './resident.service';\n\nconst { backendUrl } = environment;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PayementService {\n \n  buildingId: string;\n\n  \n\n  constructor(\n    private myHttpServ: HttpClient\n  ) { }\n  \n  // GET /api/residents\n  getPayementList() {\n    const buildingId = this.buildingId;\n    return this.myHttpServ\n      .get(\n        `${backendUrl}/api/payements/${buildingId}`,\n        { withCredentials: true } \n      )\n      .toPromise();\n  }\n\n  // GET /api/resident/:id\n  getPayementItem(id) {\n    // return the Promise of the request (component will \".then()\" & \".catch()\")\n    return this.myHttpServ\n      .get(\n        `${backendUrl}/api/payement/${id}`,\n        { withCredentials: true } \n      )\n      .toPromise();\n}\n\n// DELETE /api/resident/:id\ndeletePayementItem(id) {\n  // return the Promise of the request (component will \".then()\" & \".catch()\")\n  return this.myHttpServ\n    .delete(\n      `${backendUrl}/api/payement/${id}`,\n      { withCredentials: true } \n    )\n    .toPromise();\n}\n\n// POST /api/\npostPayement(payementInfo: PayementSubmission) {\n  // return the Promise of the request (component will \".then()\" & \".catch()\")\n  const buildingId = this.buildingId;\n  return this.myHttpServ\n    .post(\n      `${backendUrl}/api/payements`,\n      { payementInfo, buildingId },\n      { withCredentials: true } \n    )\n    .toPromise();\n}\n\ngetBuildingId(buildingId) {\n  this.buildingId = buildingId;\n}\n\n\n}\n\nexport class Payement {\n  _id: string;\n  payer: Resident;\n  situation: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport class PayementSubmission {\n  payer: string;\n  situation: string;\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from \"../../environments/environment\";\n\nconst { backendUrl } = environment;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResidentService {\n\n  buildingId: string;\n\n  constructor(\n    private myHttpServ: HttpClient\n  ) { }\n  \n  // GET /api/residents\n  getResidentList() {\n    const buildingId = this.buildingId;\n    return this.myHttpServ\n      .get(\n        `${backendUrl}/api/residents/${buildingId}`,\n        { withCredentials: true } \n      )\n      .toPromise();\n  }\n\n  // GET /api/resident/:id\n  getResidentItem(id) {\n    // return the Promise of the request (component will \".then()\" & \".catch()\")\n    return this.myHttpServ\n      .get(\n        `${backendUrl}/api/resident/${id}`,\n        { withCredentials: true } \n      )\n      .toPromise();\n}\n\n// DELETE /api/resident/:id\ndeleteResidentItem(id) {\n  // return the Promise of the request (component will \".then()\" & \".catch()\")\n  return this.myHttpServ\n    .delete(\n      `${backendUrl}/api/resident/${id}`,\n      { withCredentials: true } \n    )\n    .toPromise();\n}\n\n// POST /api/\npostResident(residentInfo: ResidentSubmission) {\n  // return the Promise of the request (component will \".then()\" & \".catch()\")\n  const buildingId = this.buildingId;\n  return this.myHttpServ\n    .post(\n      `${backendUrl}/api/residents`,\n      { residentInfo, buildingId },\n      { withCredentials: true } // send cookies across domains\n    )\n    .toPromise();\n}\n\ngetBuildingId(buildingId) {\n  this.buildingId = buildingId;\n}\n\n}\n\nexport class Resident {\n  _id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport class ResidentSubmission {\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Resident } from './resident.service';\n\nconst { backendUrl } = environment;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SuggestionService {\n\n  buildingId: string;\n\n  constructor(\n    private myHttpServ: HttpClient\n  ) { }\n\n  // GET /api/residents\n  getSuggestionList() {\n    const buildingId = this.buildingId;\n    return this.myHttpServ\n      .get(\n        `${backendUrl}/api/suggestions/${buildingId}`,\n        { withCredentials: true } \n      )\n      .toPromise();\n  }\n\n  // GET /api/resident/:id\n  getSuggestionItem(id) {\n    // return the Promise of the request (component will \".then()\" & \".catch()\")\n    return this.myHttpServ\n      .get(\n        `${backendUrl}/api/suggestion/${id}`,\n        { withCredentials: true } \n      )\n      .toPromise();\n}\n\n// DELETE /api/resident/:id\ndeleteSuggestionItem(id) {\n  // return the Promise of the request (component will \".then()\" & \".catch()\")\n  return this.myHttpServ\n    .delete(\n      `${backendUrl}/api/suggestion/${id}`,\n      { withCredentials: true } \n    )\n    .toPromise();\n}\n\n// POST /api/\npostSuggestion(suggestionInfo: SuggestionSubmission) {\n  // return the Promise of the request (component will \".then()\" & \".catch()\")\n  const buildingId = this.buildingId;\n  return this.myHttpServ\n    .post(\n      `${backendUrl}/api/suggestions`,\n      { suggestionInfo, buildingId },\n      { withCredentials: true } \n    )\n    .toPromise();\n}\n\ngetBuildingId(buildingId) {\n  this.buildingId = buildingId;\n}\n\n}\n\n\nexport class Suggestion {\n  _id: string;\n  description: string;\n  complainant: Resident;\n  category: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport class SuggestionSubmission {\n  description: string;\n  category: string;\n  complainant: string;\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nimport { BuildingComponent } from './building/building.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { NotFoundPageComponent } from './not-found-page/not-found-page.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { BuildingDetailsComponent } from './building-details/building-details.component';\nimport { BuildingListComponent } from './building-list/building-list.component';\n\n\n\nconst routes: Routes = [\n  { path: \"\", component: LandingPageComponent },\n  { path: \"login\", component: LoginComponent },\n  { path: \"signup\", component: SignupComponent },\n  { path: \"building\", component: BuildingComponent },\n  { path: \"building/addbuilding\", component: BuildingListComponent },\n  { path: \"building/:buildingId\", component: BuildingDetailsComponent },\n  { path: \"**\", component: NotFoundPageComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"mat-toolbar {\\n    height: 100%;\\n}\\n\\na {\\n    text-decoration: none;\\n    color: white;\\n    font-size: 25px;\\n}\\n\\n.navigation-items {\\n    list-style: none;\\n    padding: 0;\\n    margin: 0; \\n}\\n\\na:hover,\\na:active {\\n    color: BLACK;\\n}\\n\\n.nav1 {\\n    margin-right:20px;\\n}\"","module.exports = \"\\n  <!-- <nav>\\n    <div>\\n      <a routerLink=\\\"/\\\">Home</a>\\n    </div>\\n    \\n    <div fxFlex fxLayout fxLayoutAlign=\\\"flex-end\\\">\\n      \\n      <ul fxLayout fxLayoutGap=\\\"10px\\\" class=\\\"navigation-items\\\">\\n        <span *ngIf=\\\"!myAuthServ.currentUser\\\">\\n          <li><a routerLink=\\\"/signup\\\">Sign Up</a></li>\\n          <li><a routerLink=\\\"/login\\\">Log In</a></li>\\n        </span>\\n        <span *ngIf=\\\"myAuthServ.currentUser\\\">\\n          <b>Welcome back, {{myAuthServ.currentUser.firstName}}!</b>\\n          <li>\\n            <button (click)=\\\"logoutClick()\\\">Log Out</button>\\n          </li>\\n        </span>\\n      </ul>\\n      \\n    </div>\\n    \\n  </nav> -->\\n  \\n  <header>\\n  <mat-toolbar color=\\\"warn\\\">\\n      <div>\\n          <a routerLink=\\\"/\\\">BUILDING+</a>\\n        </div>\\n    <div fxFlex fxLayout fxLayoutAlign= \\\"flex-end\\\">\\n      <ul  fxLayout fxLayoutGap=\\\"30px\\\" class=\\\"navigation-items\\\">\\n        <span *ngIf=\\\"!myAuthServ.currentUser\\\">\\n          <a class=\\\"nav1\\\" routerLink=\\\"#\\\">About</a>\\n          <a class=\\\"nav1\\\" routerLink=\\\"/signup\\\">Sign Up</a>\\n          <a class=\\\"nav1\\\" routerLink=\\\"/login\\\">Log In</a>\\n        </span>\\n        <span *ngIf=\\\"myAuthServ.currentUser\\\">\\n          <a class=\\\"nav1\\\" routerLink=\\\"/building\\\">List Of Buildings</a>\\n          <b class=\\\"nav1\\\">Welcome back, {{myAuthServ.currentUser.firstName}}!</b>\\n          <button class=\\\"nav1\\\" (click)=\\\"logoutClick()\\\">Log Out</button>\\n           \\n          \\n        </span>\\n      </ul>\\n    </div>\\n  </mat-toolbar>\\n \\n\\n</header>\\n\\n\\n<router-outlet></router-outlet>\\n\\n\\n\\n\\n\"","import { Component } from '@angular/core';\nimport { AuthService } from './api/auth.service';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n  constructor(\n    public myAuthServ: AuthService,\n    private myRouterServ: Router\n  ) { }\n\n  ngOnInit() {\n    // ask the backend about the login status as soon as the app loads\n    this.myAuthServ.check()\n      .catch((err) => {\n        alert(\"We are having trouble connecting. Is your Internet working? 🌍\");\n        console.log(err);\n      });\n  }\n\n  logoutClick() {\n    this.myAuthServ.logout()\n    .then(() => {\n      this.myRouterServ.navigateByUrl(\"/\");\n    }) \n      .catch((err) => {\n        alert(\"Sorry! There was a problem with your log out. 😑\");\n        console.log(err);\n      });\n}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './material.module';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { NotFoundPageComponent } from './not-found-page/not-found-page.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { BuildingComponent } from './building/building.component';\nimport { BuildingDetailsComponent } from './building-details/building-details.component';\nimport { BuildingListComponent } from './building-list/building-list.component';\nimport { PaymentsComponent } from './building-details/./payments/payments.component';\nimport { ResidentsComponent } from './building-details/./residents/residents.component';\nimport { SuggestionsComponent } from './building-details/./suggestions/suggestions.component'\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    LoginComponent,\n    LandingPageComponent,\n    BuildingComponent,\n    BuildingDetailsComponent,\n    BuildingListComponent,\n    PaymentsComponent,\n    ResidentsComponent,\n    SuggestionsComponent,\n    NotFoundPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".text {\\n    font-weight: bold;\\n}\\n\\n.new-building {\\n    font-size: 30px;\\n}\"","module.exports = \"\\n\\n<mat-tab-group>\\n  <mat-tab label=\\\"The Building Details\\\">\\n<section  fxLayout fxLayoutAlign=\\\"center\\\">\\n  <mat-card class=\\\"new-building\\\" fxFlex=\\\"400px\\\">\\n\\n  <mat-card-title>Building Details</mat-card-title>\\n  <mat-card-subtitle>{{buildingItem?.adress}}</mat-card-subtitle>\\n  <mat-card-content>\\n      <img mat-card-image [src]=\\\"buildingItem?.image\\\">\\n      <p>by <span class=\\\"text\\\">{{buildingItem?.promoter}}</span></p>\\n      <p>building functional since <span class=\\\"text\\\">{{buildingItem?.dateOfoperation}}</span></p>\\n      <p>the budget I dispose for this Building is <span class=\\\"text\\\">{{buildingItem?.budgetDisposed}}</span> $</p>\\n      <p>inhabutants in this building should pay before <span class=\\\"text\\\">{{buildingItem?.dueDate}}</span></p>\\n  </mat-card-content>\\n  </mat-card>\\n</section>\\n\\n    </mat-tab>\\n\\n  <mat-tab label=\\\"Manage Residents\\\">\\n      <app-residents></app-residents> \\n    </mat-tab>\\n\\n  <mat-tab label=\\\"Accomplish Suggestions\\\">\\n      <app-suggestions></app-suggestions> \\n    </mat-tab>\\n\\n  <mat-tab label=\\\"Track Payments\\\">\\n      <app-payments></app-payments> \\n    </mat-tab>\\n\\n</mat-tab-group>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\nimport { BuildingService, Building } from '../api/building.service';\nimport { ResidentService } from '../api/resident.service';\nimport { SuggestionService } from '../api/suggestion.service';\nimport { PayementService } from '../api/payement.service';\n\n@Component({\n  selector: 'app-building-details',\n  templateUrl: './building-details.component.html',\n  styleUrls: ['./building-details.component.css']\n})\n\nexport class BuildingDetailsComponent implements OnInit {\n\n  id: string;\n  buildingItem: Building;\n\n  constructor(\n    private myActivatedRouteServ: ActivatedRoute,\n    private myBuildingServ: BuildingService,\n    private myRouterServ: Router,\n    private myResident: ResidentService,\n    private myPayement: PayementService,\n    private mySuggestion: SuggestionService\n  ) { }\n\n  ngOnInit() {\n    this.myActivatedRouteServ.paramMap\n      .subscribe((myParams) => {\n        // \"buildingId\" comes from the route's PATH\n        // { path: \"building/:buildingId\", ... }\n        this.id = myParams.get(\"buildingId\");\n        this.myResident.getBuildingId(this.id);\n        this.mySuggestion.getBuildingId(this.id);\n        this.myPayement.getBuildingId(this.id);\n        this.fetchBuildingDetails();\n    });\n  }\n\n  fetchBuildingDetails() {\n    this.myBuildingServ.getBuildingItem(this.id)\n      .then((response: Building) => {\n        // connects the DATA from the API to the COMPONENT state\n        this.buildingItem = response;\n      })\n      .catch((err) => {\n        alert(\"Sorry! There was a problem getting the Building's details. 😅\");\n        console.log(err);\n      });\n  }\n\n  deleteBuildingClick() {\n    const { adress } = this.buildingItem;\n    const isOkay = confirm(`Delete building ${adress}?`);\n\n    if (isOkay) {\n      this.myBuildingServ.deleteBuildingItem(this.id)\n        .then(() => {\n          // redirect away to the list page\n          this.myRouterServ.navigateByUrl(\"/building\");\n        })                \n        .catch((err) => {\n          alert(\"Sorry! There was a problem deleting the building. 😨\");\n          console.log(err);\n        });\n    }\n}\n\n}\n","module.exports = \"\"","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/foundation/6.4.3/css/foundation.css\\\">\\n\\n\\n<div class=\\\"top-bar\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"top-bar-left\\\">\\n      <ul class=\\\"menu\\\">\\n        <li class=\\\"menu-text\\\">Payements</li>  \\n      </ul>  \\n    </div> \\n    <div class=\\\"top-bar-right\\\">\\n      \\n    </div> \\n  </div>  \\n</div>\\n<br>\\n\\n<div *ngIf=\\\"appState == 'default'\\\" class=\\\"row\\\">\\n  <div class=\\\"large-6 columns\\\">\\n    <button class=\\\"button\\\" (click)=\\\"changeState('add')\\\">Add Payements</button>\\n  </div>\\n</div>\\n\\n<!-- ADD FORM -->\\n<div *ngIf=\\\"appState == 'add'\\\">\\n  <div class=\\\"large-12 columns\\\">\\n    <h3>Add Payements</h3>\\n    <form (ngSubmit)=\\\"payementSubmit()\\\">\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"medium-6 columns\\\">\\n            <label> Payer\\n              <select [(ngModel)]=\\\"userForm.payer\\\" name=\\\"payer\\\">\\n                <option value=\\\"0\\\">Select</option>\\n                <option *ngFor=\\\"let resident of residents\\\" value=\\\"{{resident._id}}\\\">\\n                  {{resident.firstName}}\\n                </option>\\n                </select>\\n            </label>\\n            <br />\\n          </div>\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>\\n              Situation\\n               <input [(ngModel)]=\\\"userForm.situation\\\" name=\\\"situation\\\" type=\\\"text\\\" placeholder=\\\"done or not done\\\" />\\n             </label>\\n          </div>\\n        </div>\\n        \\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"large-12\\\">\\n            <input type=\\\"submit\\\" class=\\\"button\\\" value=\\\"Submit\\\">  \\n          </div>  \\n        </div>\\n    </form>  \\n  </div>  \\n</div>\\n\\n<div *ngIf=\\\"appState == 'extend'\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"large-12 large-1-offset columns\\\">\\n      <button class=\\\"button alert\\\" (click)=\\\"changeState('default')\\\">Go back</button>  \\n    </div>  \\n  </div>\\n  <div *ngFor=\\\"let payement of payements\\\">\\n    <div *ngIf=\\\"payement._id == activeKey\\\">\\n      <div class=\\\"row\\\">\\n        <!-- <div class=\\\"large-5 columns large-offset-1\\\">\\n          <h3>{{business.company}}</h3>\\n          <p>Category: {{business.category}}</p>\\n          <p>Years In Business: {{business.years_in_business}}\\n          <p>{{business.description}}</p>\\n        </div>   -->\\n        \\n        <div class=\\\"large-5 columns large-offset-1\\\">\\n          <h4>Situation Info</h4>\\n          <ul>\\n            <li>Payer: {{payement.payer?.firstName}}</li>    \\n            <li>Situation: {{payement.situation}}</li>  \\n            <!-- <li>Email: {{payement.category}}</li>   -->\\n          </ul>\\n        </div> \\n      </div>  \\n    </div> \\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"large-12 columns\\\">\\n    <div >\\n        <table>\\n          <thead>\\n            <tr>\\n              <th>Payer</th>\\n              <th>Situation</th>\\n              <!-- <th>Complainant</th> -->\\n              <th></th>  \\n            </tr>  \\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let payement of payements\\\" >\\n                <td>{{payement.payer?.firstName}}</td>\\n                <td>{{payement.situation}}</td>\\n                <!-- <td>{{suggestion.category}}</td> -->\\n                <td>\\n                  <button (click)=\\\"changeState('extend', payement._id)\\\" class=\\\"button\\\">More</button>\\n                  <button  class=\\\"button alert\\\">Delete</button>\\n                </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n    </div>  \\n  </div>  \\n</div> \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n<script\\n  src=\\\"https://code.jquery.com/jquery-1.12.4.js\\\"\\n  integrity=\\\"sha256-Qw82+bXyGq6MydymqBxNPYTaUXXq7c8v3CwiYwLLNXU=\\\"\\n  crossorigin=\\\"anonymous\\\"></script>\\n  <script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/foundation/6.4.3/js/foundation.js\\\"></script>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PayementService, Payement, PayementSubmission } from '../../api/payement.service';\nimport { ResidentService, Resident } from '../../api/resident.service';\n\n@Component({\n  selector: 'app-payments',\n  templateUrl: './payments.component.html',\n  styleUrls: ['./payments.component.css']\n})\nexport class PaymentsComponent implements OnInit {\n\n  userForm: PayementSubmission = new PayementSubmission();\n  payements: Array<Payement> = [];\n  payementItem: Payement;\n  residents: Array<Resident> = [];\n  appState: string;\n  activeKey: string;\n\n  constructor(\n    private myPayementServ: PayementService,\n    private myRouterServ: Router,\n    private myResidentServ: ResidentService\n  ) { }\n\n  ngOnInit() {\n    this.appState = 'default';\n    this.fetchPayements();\n    this.fetchResidents();\n  }\n\n  changeState(state, key = null){\n    if(key){\n      this.activeKey = key;\n    }\n    this.appState = state;\n  }\n\n  fetchPayements() {\n    this.myPayementServ.getPayementList()\n    .then((response: Array<Payement>) => {\n      this.payements = response;\n      console.log(this.payements);\n    })\n    .catch((err) => {\n      alert(\"Sorry! We couldn't get our list of payements. 😕\");\n      console.log(err);\n    });\n  }\n\n  payementSubmit() {\n    console.log(this.userForm);\n    // pass the form inputs to the service\n    this.myPayementServ.postPayement(this.userForm)\n      .then((response: Payement) => {\n        this.fetchPayements();\n      })\n      .catch((err) => {\n        alert(\"Sorry! There was a problem submitting your payements! 😰\");\n        console.log(err);\n      });\n      this.changeState('default');\n  }\n\n  fetchResidents() {\n    this.myResidentServ.getResidentList()\n     .then((response: Array<Resident>) => {\n      this.residents = response;\n      console.log(this.residents);\n     })\n     .catch((err) => {\n      alert(\"Sorry! We couldn't get our list of residents. 😕\");\n      console.log(err);\n     });\n  }\n\n  fetchBuildingId( id ) {\n    this.myPayementServ.getBuildingId(id);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/foundation/6.4.3/css/foundation.css\\\">\\n\\n\\n\\n<!-- <div *ngIf=\\\"appState == 'default'\\\" class=\\\"row\\\">\\n  <div class=\\\"large-6 columns\\\">\\n    <button class=\\\"button\\\" (click)=\\\"changeState('add')\\\">Add Residents</button>\\n  </div>\\n</div> -->\\n\\n\\n<!-- ADD FORM -->\\n<!-- <div *ngIf=\\\"appState == 'add'\\\">\\n  <div class=\\\"large-12 columns\\\">\\n    <h3>Add Residents</h3>\\n    <form (ngSubmit)= residentSubmit()>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"large-6 columns\\\">\\n             <label> First Name\\n              <input [(ngModel)]=\\\"userForm.firstName\\\" type=\\\"text\\\" name=\\\"firstName\\\" placeholder=\\\"first Name\\\" >\\n              </label>\\n          </div> \\n \\n        </div>\\n        \\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Last Name\\n              <input [(ngModel)]=\\\"userForm.lastName\\\" type=\\\"text\\\" placeholder=\\\"lastName\\\" name=\\\"lastName\\\">\\n            </label>\\n          </div>\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Email\\n              <input [(ngModel)]=\\\"userForm.email\\\" type=\\\"text\\\" placeholder=\\\"Email\\\" name=\\\"email\\\">\\n            </label>\\n          </div>\\n        </div>\\n        \\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"large-12\\\">\\n            <button>Submit Resident</button>  \\n          </div>  \\n        </div>\\n    </form>  \\n  </div>  \\n</div> -->\\n\\n\\n<!-- <div *ngIf=\\\"appState == 'extend'\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"large-12 large-1-offset columns\\\">\\n      <button class=\\\"button alert\\\" (click)=\\\"changeState('default')\\\">Go back</button>  \\n    </div>  \\n  </div>\\n  <div *ngFor=\\\"let resident of residents\\\">\\n    <div *ngIf=\\\"resident._id == activeKey\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"large-5 columns large-offset-1\\\">\\n          <h3>{{resident.firstName}}</h3>\\n          <p>{{resident.lastName}}</p>\\n          <p>Years In Business: {{resident.email}}\\n        </div>   \\n      </div>  \\n    </div> \\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n      <div >\\n          <table>\\n            <thead>\\n              <tr>\\n                <th>Company</th>\\n                <th>Category</th>\\n                <th>Phone</th>\\n                <th></th>  \\n              </tr>  \\n            </thead>\\n            <tbody>\\n              <tr >\\n                  <td>compagny 1</td>\\n                  <td>category 2</td>\\n                  <td>phone 3</td>\\n                  <td>\\n                    <button  class=\\\"button\\\">More</button>\\n                    <button  class=\\\"button secondary\\\">Edit</button>\\n                    <button  class=\\\"button alert\\\">Delete</button>\\n                  </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n      </div>  \\n    </div>  \\n  </div> -->\\n\\n  <div class=\\\"top-bar\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"top-bar-left\\\">\\n        <ul class=\\\"menu\\\">\\n          <li class=\\\"menu-text\\\">Residents</li>  \\n        </ul>  \\n      </div> \\n      <div class=\\\"top-bar-right\\\">\\n        \\n      </div> \\n    </div>  \\n  </div>\\n  <br>\\n\\n  <div *ngIf=\\\"appState == 'default'\\\" class=\\\"row\\\">\\n    <div class=\\\"large-6 columns\\\">\\n      <button class=\\\"button\\\" (click)=\\\"changeState('add')\\\">Add Residents</button>\\n    </div>\\n  </div>\\n\\n  <!-- ADD FORM -->\\n<div *ngIf=\\\"appState == 'add'\\\">\\n  <div class=\\\"large-12 columns\\\">\\n    <h3>Add Residents</h3>\\n    <form (ngSubmit)=\\\"residentSubmit()\\\">\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>\\n              first Name\\n              <input [(ngModel)]=\\\"userForm.firstName\\\" name=\\\"firstName\\\" type=\\\"text\\\" placeholder=\\\"40 Rue de colisé Paris\\\" />\\n            </label>\\n            <br />\\n          </div>\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>\\n              last Name\\n               <input [(ngModel)]=\\\"userForm.lastName\\\" name=\\\"lastName\\\" type=\\\"text\\\" placeholder=\\\"Kaufmann and Broad\\\" />\\n             </label>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>\\n              email\\n              <input [(ngModel)]=\\\"userForm.email\\\" name=\\\"email\\\" type=\\\"text\\\" placeholder=\\\"Kaufmann and Broad\\\" />\\n            </label>\\n          </div>\\n        </div>\\n        \\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"large-12\\\">\\n            <input type=\\\"submit\\\" class=\\\"button\\\" value=\\\"Submit\\\">  \\n          </div>  \\n        </div>\\n    </form>  \\n  </div>  \\n</div>\\n  \\n\\n  <div *ngIf=\\\"appState == 'extend'\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"large-12 large-1-offset columns\\\">\\n        <button class=\\\"button alert\\\" (click)=\\\"changeState('default')\\\">Go back</button>  \\n      </div>  \\n    </div>\\n    <div *ngFor=\\\"let resident of residents\\\">\\n      <div *ngIf=\\\"resident._id == activeKey\\\">\\n        <div class=\\\"row\\\">\\n          <!-- <div class=\\\"large-5 columns large-offset-1\\\">\\n            <h3>{{business.company}}</h3>\\n            <p>Category: {{business.category}}</p>\\n            <p>Years In Business: {{business.years_in_business}}\\n            <p>{{business.description}}</p>\\n          </div>   -->\\n          \\n          <div class=\\\"large-5 columns large-offset-1\\\">\\n            <h4>Contact Info</h4>\\n            <ul>\\n              <li>Phone: {{resident.firstName}}</li>  \\n              <li>Email: {{resident.lastName}}</li>  \\n              <li>Street: {{resident.email}}</li>    \\n            </ul>\\n          </div> \\n        </div>  \\n      </div> \\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n      <div >\\n          <table>\\n            <thead>\\n              <tr>\\n                <th>First Name</th>\\n                <th>Last Name</th>\\n                <th>Email</th>\\n                <th></th>  \\n              </tr>  \\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let resident of residents\\\" >\\n                  <td>{{resident.firstName}}</td>\\n                  <td>{{resident.lastName}}</td>\\n                  <td>{{resident.email}}</td>\\n                  <td>\\n                    <button (click)=\\\"changeState('extend', resident._id)\\\" class=\\\"button\\\">More</button>\\n                    <button  class=\\\"button secondary\\\">Edit</button>\\n                    <button  (click)=\\\"deleteResident(resident._id)\\\" class=\\\"button alert\\\">Delete</button>\\n                  </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n      </div>  \\n    </div>  \\n  </div> \\n\\n\\n\\n\\n\\n    \\n    <!-- <form (ngSubmit)=\\\"residentSubmit()\\\">\\n      <label>\\n        firstName\\n        <input [(ngModel)]=\\\"userForm.firstName\\\" name=\\\"firstName\\\" type=\\\"text\\\" placeholder=\\\"40 Rue de colisé Paris\\\" />\\n      </label>\\n      <br />\\n    \\n      <label>\\n       lastName\\n        <input [(ngModel)]=\\\"userForm.lastName\\\" name=\\\"lastName\\\" type=\\\"text\\\" placeholder=\\\"Kaufmann and Broad\\\" />\\n      </label>\\n      <br />\\n\\n         <label>\\n            email\\n            <input [(ngModel)]=\\\"userForm.email\\\" name=\\\"email\\\" type=\\\"text\\\" placeholder=\\\"Kaufmann and Broad\\\" />\\n          </label>\\n          <br />\\n    \\n      <button >Submit My new resident</button>\\n    </form>\\n\\n\\n\\n\\n  <div>\\n\\n    <ul>\\n      <li *ngFor=\\\"let resident of residents\\\">\\n        <h3>{{resident.firstName}}</h3>\\n        <p>by {{resident.lastName}}</p>\\n        <br />\\n      </li>\\n    </ul>\\n  \\n  </div> -->\\n\\n  <script\\n  src=\\\"https://code.jquery.com/jquery-1.12.4.js\\\"\\n  integrity=\\\"sha256-Qw82+bXyGq6MydymqBxNPYTaUXXq7c8v3CwiYwLLNXU=\\\"\\n  crossorigin=\\\"anonymous\\\"></script>\\n  <script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/foundation/6.4.3/js/foundation.js\\\"></script>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router'; \nimport { ResidentService, Resident, ResidentSubmission } from '../../api/resident.service';\n\n\n@Component({\n  selector: 'app-residents',\n  templateUrl: './residents.component.html',\n  styleUrls: ['./residents.component.css']\n})\n\nexport class ResidentsComponent implements OnInit {\n userForm: ResidentSubmission = new ResidentSubmission();\n residents: Array<Resident> = [];\n residentItem: Resident;\n appState: string;\n activeKey: string;\n id: string;\n\n  constructor(\n    private myActivatedRouteServ: ActivatedRoute,\n    private myResidentServ: ResidentService,\n    private myRouterServ: Router\n  ) { }\n\n  ngOnInit() {\n    this.appState = 'default';\n    this.fetchResidents();\n    // this.myActivatedRouteServ.paramMap\n    // .subscribe((myParams) => {\n    //   // \"phoneId\" comes from the route's PATH\n    //   // { path: \"phone/:phoneId\", ... }\n    //   this.id = myParams.get(\"???Id\");\n    // });\n  }\n  \n  changeState(state, key = null){\n    if(key){\n      this.activeKey = key;\n    }\n    this.appState = state;\n  }\n\n  fetchResidents() {\n    this.myResidentServ.getResidentList()\n     .then((response: Array<Resident>) => {\n      this.residents = response;\n      console.log(this.residents);\n     })\n     .catch((err) => {\n      alert(\"Sorry! We couldn't get our list of residents. 😕\");\n      console.log(err);\n     });\n  }\n\n\n  residentSubmit() {\n    // pass the form inputs to the service\n    this.myResidentServ.postResident(this.userForm)\n      .then((response: Resident) => {\n        this.fetchResidents();\n      })\n      .catch((err) => {\n        alert(\"Sorry! There was a problem submitting your residents! 😰\");\n        console.log(err);\n      });\n      this.changeState('default');\n  }\n\n\n  deleteResident( id ) {\n    this.myResidentServ.deleteResidentItem( id )\n    .then(() => {\n    this.fetchResidents();      \n    })\n    .catch(( err ) => {\n      console.log( err );\n    })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/foundation/6.4.3/css/foundation.css\\\">\\n \\n <!-- <div>\\n\\n  <h2>add a new Resident</h2>\\n\\n  \\n  <form (ngSubmit)=\\\"suggestionSubmit()\\\">\\n    <label>\\n      Description\\n      <input [(ngModel)]=\\\"userForm.description\\\" name=\\\"description\\\" type=\\\"text\\\" placeholder=\\\"\\\" />\\n    </label>\\n    <br />\\n  \\n    <label>\\n     Category\\n      <input [(ngModel)]=\\\"userForm.category\\\" name=\\\"category\\\" type=\\\"text\\\" placeholder=\\\"Kaufmann and Broad\\\" />\\n    </label>\\n    <br /> -->\\n\\n       <!-- <label>\\n          email\\n          <input [(ngModel)]=\\\"userForm.complainant\\\" name=\\\"complainant\\\" type=\\\"text\\\" placeholder=\\\"Kaufmann and Broad\\\" />\\n        </label>\\n        <br /> -->\\n\\n        <!-- <div >\\n        <label> complainant\\n            <select [(ngModel)]=\\\"userForm.complainant\\\" name=\\\"complainant\\\">\\n              <option value=\\\"0\\\">Select</option>\\n              <option *ngFor=\\\"let resident of residents\\\" value=\\\"{{resident._id}}\\\">\\n                {{resident.firstName}}\\n              </option>\\n              </select>\\n          </label>\\n        </div>\\n      \\n  \\n    <button >Submit A new Suggestion</button>\\n  </form>\\n\\n</div>\\n\\n\\n<div>\\n\\n  <ul>\\n    <li *ngFor=\\\"let suggestion of suggestions\\\">\\n      <h3>{{suggestion.description}}</h3>\\n      <p>by {{suggestion.complainant?.firstName}}</p>\\n      <br />\\n    </li>\\n  </ul>\\n\\n</div>  -->\\n\\n\\n\\n<div class=\\\"top-bar\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"top-bar-left\\\">\\n      <ul class=\\\"menu\\\">\\n        <li class=\\\"menu-text\\\">Suggestions</li>  \\n      </ul>  \\n    </div> \\n    <div class=\\\"top-bar-right\\\">\\n      \\n    </div> \\n  </div>  \\n</div>\\n\\n<div *ngIf=\\\"appState == 'default'\\\" class=\\\"row\\\">\\n  <div class=\\\"large-6 columns\\\">\\n    <button class=\\\"button\\\" (click)=\\\"changeState('add')\\\">Add Suggestions</button>\\n  </div>\\n</div>\\n\\n<!-- ADD FORM -->\\n<div *ngIf=\\\"appState == 'add'\\\">\\n<div class=\\\"large-12 columns\\\">\\n  <h3>Add Suggestions</h3>\\n  <form (ngSubmit)=\\\"suggestionSubmit()\\\">\\n      \\n      <div class=\\\"row\\\">\\n        <div class=\\\"medium-6 columns\\\">\\n          <label>\\n            Description\\n            <input [(ngModel)]=\\\"userForm.description\\\" name=\\\"description\\\" type=\\\"text\\\" placeholder=\\\"\\\" />\\n          </label>\\n          <br />\\n        </div>\\n        <div class=\\\"medium-6 columns\\\">\\n          <label>\\n            Category\\n             <input [(ngModel)]=\\\"userForm.category\\\" name=\\\"category\\\" type=\\\"text\\\" placeholder=\\\"Kaufmann and Broad\\\" />\\n           </label>\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"row\\\">\\n        <div class=\\\"medium-6 columns\\\">\\n          \\n            <label> complainant\\n                <select [(ngModel)]=\\\"userForm.complainant\\\" name=\\\"complainant\\\">\\n                  <option value=\\\"0\\\">Select</option>\\n                  <option *ngFor=\\\"let resident of residents\\\" value=\\\"{{resident._id}}\\\">\\n                    {{resident.firstName}}\\n                  </option>\\n                  </select>\\n              </label>\\n            \\n        </div>\\n      </div>\\n      \\n      \\n      <div class=\\\"row\\\">\\n        <div class=\\\"large-12\\\">\\n          <input type=\\\"submit\\\" class=\\\"button\\\" value=\\\"Submit\\\">  \\n        </div>  \\n      </div>\\n  </form>  \\n</div>  \\n</div>\\n\\n\\n<div *ngIf=\\\"appState == 'extend'\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"large-12 large-1-offset columns\\\">\\n      <button class=\\\"button alert\\\" (click)=\\\"changeState('default')\\\">Go back</button>  \\n    </div>  \\n  </div>\\n  <div *ngFor=\\\"let suggestion of suggestions\\\">\\n    <div *ngIf=\\\"suggestion._id == activeKey\\\">\\n      <div class=\\\"row\\\">\\n        <!-- <div class=\\\"large-5 columns large-offset-1\\\">\\n          <h3>{{business.company}}</h3>\\n          <p>Category: {{business.category}}</p>\\n          <p>Years In Business: {{business.years_in_business}}\\n          <p>{{business.description}}</p>\\n        </div>   -->\\n        \\n        <div class=\\\"large-5 columns large-offset-1\\\">\\n          <h4>Work Info</h4>\\n          <ul>\\n            <li>Description: {{suggestion.description}}</li>  \\n            <li>Email: {{suggestion.category}}</li>  \\n            <li>Street: {{suggestion.complainant?.firstName}}</li>    \\n          </ul>\\n        </div> \\n      </div>  \\n    </div> \\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"large-12 columns\\\">\\n    <div >\\n        <table>\\n          <thead>\\n            <tr>\\n              <th>Description</th>\\n              <th>Category</th>\\n              <th>Complainant</th>\\n              <th></th>  \\n            </tr>  \\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let suggestion of suggestions\\\" >\\n                <td>{{suggestion.description}}</td>\\n                <td>{{suggestion.category}}</td>\\n                <td>{{suggestion.complainant?.firstName}}</td>\\n                <td>\\n                  <button (click)=\\\"changeState('extend', suggestion._id)\\\" class=\\\"button\\\">More</button>\\n                  <button  class=\\\"button alert\\\">Delete</button>\\n                </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n    </div>  \\n  </div>  \\n</div> \\n\\n\\n\\n\\n\\n  \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n<script\\n  src=\\\"https://code.jquery.com/jquery-1.12.4.js\\\"\\n  integrity=\\\"sha256-Qw82+bXyGq6MydymqBxNPYTaUXXq7c8v3CwiYwLLNXU=\\\"\\n  crossorigin=\\\"anonymous\\\"></script>\\n  <script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/foundation/6.4.3/js/foundation.js\\\"></script>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SuggestionService, Suggestion, SuggestionSubmission } from '../../api/suggestion.service';\nimport { ResidentService, Resident } from '../../api/resident.service';\n\n@Component({\n  selector: 'app-suggestions',\n  templateUrl: './suggestions.component.html',\n  styleUrls: ['./suggestions.component.css']\n})\nexport class SuggestionsComponent implements OnInit {\n\n  userForm: SuggestionSubmission = new SuggestionSubmission();\n  suggestions: Array<Suggestion> = [];\n  suggestionItem: Suggestion;\n  residents: Array<Resident> = [];\n  appState: string;\n  activeKey: string;\n\n  constructor(\n    private mySuggestionServ: SuggestionService,\n    private myRouterServ: Router,\n    private myResidentServ: ResidentService\n  ) { }\n\n  ngOnInit() {\n    this.appState = 'default';\n    this.fetchSuggestions();\n    this.fetchResidents();\n  }\n\n  changeState(state, key = null){\n    if(key){\n      this.activeKey = key;\n    }\n    this.appState = state;\n  }\n\n  fetchSuggestions() {\n    this.mySuggestionServ.getSuggestionList()\n    .then((response: Array<Suggestion>) => {\n      this.suggestions = response;\n      console.log(this.suggestions);\n    })\n    .catch((err) => {\n      alert(\"Sorry! We couldn't get our list of suggestions. 😕\");\n      console.log(err);\n    });\n  }\n\n  suggestionSubmit() {\n    console.log(this.userForm);\n    // pass the form inputs to the service\n    this.mySuggestionServ.postSuggestion(this.userForm)\n      .then((response: Suggestion) => {\n        this.fetchSuggestions();\n      })\n      .catch((err) => {\n        alert(\"Sorry! There was a problem submitting your residents! 😰\");\n        console.log(err);\n      });\n      this.changeState('default');\n  }\n\n  fetchResidents() {\n    this.myResidentServ.getResidentList()\n     .then((response: Array<Resident>) => {\n      this.residents = response;\n      console.log(this.residents);\n     })\n     .catch((err) => {\n      alert(\"Sorry! We couldn't get our list of residents. 😕\");\n      console.log(err);\n     });\n  }\n\n  deleteResident(id) {\n    \n  }\n\n  fetchBuildingId( id ) {\n    this.mySuggestionServ.getBuildingId(id);\n  }\n\n}\n","module.exports = \".text {\\n    font-size: 20px;\\n    text-align: center;\\n}\"","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/foundation/6.4.3/css/foundation.css\\\">\\n\\n\\n<div  fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\n\\n    \\n    <form class=\\\"buildingForm\\\" (ngSubmit)=\\\"buildingSubmit()\\\">\\n      <label class=\\\"text\\\">\\n        Adress:\\n        <input [(ngModel)]=\\\"userForm.adress\\\" name=\\\"adress\\\" type=\\\"text\\\" placeholder=\\\"40 Rue de colisé Paris\\\" />\\n      </label>\\n      <br />\\n    \\n      <label class=\\\"text\\\">\\n        Promoter:\\n        <input [(ngModel)]=\\\"userForm.promoter\\\" name=\\\"promoter\\\" type=\\\"text\\\" placeholder=\\\"Kaufmann and Broad\\\" />\\n      </label>\\n      <br />\\n\\n         <label class=\\\"text\\\">\\n            Functional Since:\\n            <input [(ngModel)]=\\\"userForm.dateOfoperation\\\" name=\\\"dateOfoperation\\\" type=\\\"date\\\" placeholder=\\\"Kaufmann and Broad\\\" />\\n          </label>\\n          <br />\\n\\n          <label class=\\\"text\\\">\\n              Building Budget:\\n              <input [(ngModel)]=\\\"userForm.budgetDisposed\\\" name=\\\"budgetDisposed\\\" type=\\\"number\\\" placeholder=\\\"Kaufmann and Broad\\\" />\\n            </label>\\n            <br />\\n\\n            <label class=\\\"text\\\">\\n               Inhabitants should pay before:\\n                <input [(ngModel)]=\\\"userForm.dueDate\\\" name=\\\"dueDate\\\" type=\\\"date\\\" placeholder=\\\"7/08/2018\\\" />\\n              </label>\\n              <br />\\n    \\n            <label class=\\\"text\\\">\\n              Image URL:\\n              <input [(ngModel)]=\\\"userForm.image\\\" name=\\\"image\\\" type=\\\"text\\\" placeholder=\\\"http://example.com/building.png\\\" />\\n            </label>\\n            <br />\\n\\n            <div>\\n              <button  type=\\\"submit\\\" mat-raised-button color=\\\"warn\\\">Submit My new Property</button>\\n            </div>\\n            \\n    </form>\\n\\n</div>\\n\\n\\n\\n<script\\n  src=\\\"https://code.jquery.com/jquery-1.12.4.js\\\"\\n  integrity=\\\"sha256-Qw82+bXyGq6MydymqBxNPYTaUXXq7c8v3CwiYwLLNXU=\\\"\\n  crossorigin=\\\"anonymous\\\"></script>\\n  <script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/foundation/6.4.3/js/foundation.js\\\"></script>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BuildingSubmission, BuildingService, Building } from '../api/building.service';\n\n\n\n@Component({\n  selector: 'app-building-list',\n  templateUrl: './building-list.component.html',\n  styleUrls: ['./building-list.component.css']\n})\nexport class BuildingListComponent implements OnInit {\n\n  buildings: Array<Building> = [];\n  userForm: BuildingSubmission = new BuildingSubmission();\n  \n  constructor(\n    private myBuildingServ: BuildingService,\n    private myRouterServ: Router\n  ) { }\n\n  ngOnInit() {\n    \n  }\n\n  buildingSubmit() {\n    // pass the form inputs to the service\n    console.log(this.userForm);\n    this.myBuildingServ.postBuilding(this.userForm)\n      .then((response: Building) => {\n        // redirect to the same page\n        this.myRouterServ.navigateByUrl(`/building`);\n      })\n      .catch((err) => {\n        alert(\"Sorry! There was a problem submitting your property! 😰\");\n        console.log(err);\n      });\n  }\n\n}\n","module.exports = \"  .buildinglist {\\n    display: flex;\\n    flex-wrap: wrap;\\n  }\\n\\n  .buildingcard {\\n    padding: 2%;\\n    flex-grow: 1;\\n    flex-basis: 16%;\\n    display: flex; /* so child elements can use flexbox stuff too! */\\n  }\\n\\n  .buildingimage img {\\n    max-width: 100%;\\n  }\\n\\n  .buildinginfo {\\n    margin-top: auto;\\n  }\\n\\n  \"","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/foundation/6.4.3/css/foundation.css\\\">\\n\\n\\n\\n<section class=\\\"totalbuilding\\\">\\n\\n    <h2>Building List</h2>\\n    \\n    \\n      <button type=\\\"submit\\\" mat-raised-button color=\\\"warn\\\" routerLink=\\\"/building/addbuilding\\\">add building</button>\\n    \\n    \\n    \\n    <div >\\n    \\n      <ul class = \\\"buildinglist\\\">\\n \\n        <li class = \\\"buildingcard\\\" *ngFor=\\\"let onebuilding of buildings\\\">\\n            <mat-card fxFlex=\\\"400px\\\">\\n          <div class= \\\"buildingimage\\\">\\n            <img mat-card-image [src]=\\\"onebuilding.image\\\" />\\n          </div>\\n          <div class=\\\"buildinginfo\\\">\\n              <mat-card-title>{{onebuilding.adress}}</mat-card-title>\\n              <mat-card-subtitle>by {{onebuilding.promoter}}</mat-card-subtitle>\\n              <mat-card-actions>\\n                  <button type=\\\"submit\\\" mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"['/building', onebuilding._id]\\\" (click)=\\\"fetchBuildingId(onebuilding._id)\\\">Acess Platform</button>\\n              </mat-card-actions>\\n          </div>\\n          <br />\\n        </mat-card>\\n    \\n        </li>\\n      </ul>\\n    \\n    </div>\\n\\n</section>\\n\\n\\n\\n\\n<script\\n  src=\\\"https://code.jquery.com/jquery-1.12.4.js\\\"\\n  integrity=\\\"sha256-Qw82+bXyGq6MydymqBxNPYTaUXXq7c8v3CwiYwLLNXU=\\\"\\n  crossorigin=\\\"anonymous\\\"></script>\\n  <script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/foundation/6.4.3/js/foundation.js\\\"></script>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BuildingSubmission, BuildingService, Building } from '../api/building.service';\nimport { ResidentService } from '../api/resident.service';\nimport { SuggestionService } from '../api/suggestion.service';\nimport { PayementService } from '../api/payement.service';\n\n\n\n\n@Component({\n  selector: 'app-building',\n  templateUrl: './building.component.html',\n  styleUrls: ['./building.component.css']\n})\nexport class BuildingComponent implements OnInit {\n   buildings: Array<Building> = [];\n   userForm: BuildingSubmission = new BuildingSubmission();\n\n  constructor(\n    private myBuildingServ: BuildingService,\n    private myRouterServ: Router,\n    private myResidentServ: ResidentService,\n    private mySuggestionServ: SuggestionService,\n    private myPayementServ: PayementService\n  ) { }\n\n  ngOnInit() {\n    this.fetchBuildings();\n  }\n\n  fetchBuildings() {\n    this.myBuildingServ.getBuildingList()\n      .then((response: Array<Building>) => {\n        // connects the DATA from the API to the COMPONENT state\n        this.buildings = response;\n      })\n      .catch((err) => {\n        alert(\"Sorry! We couldn't get our list of buildings.😏 \");\n        console.log(err);\n    });\n  }\n\n  fetchBuildingId( id ) {\n    this.myResidentServ.getBuildingId(id);\n    this.mySuggestionServ.getBuildingId(id); \n    this.myPayementServ.getBuildingId(id); \n  }\n\n}\n","module.exports = \"@import url('https://fonts.googleapis.com/css?family=Roboto+Condensed:700|Roboto:100,300,700');\\n\\n.header {\\n    background: url(https://preview.ibb.co/enY3ZT/hernan_lucio_53800_unsplash.jpg) 0 0 no-repeat;\\n    background-size: cover;\\n    height: 650px;\\n    padding-top: 50px;\\n    position: relative;\\n  }\\n\\n.quote {\\n    bottom: 2vh;\\n    font-size: 2.5em;\\n    position: absolute;\\n    left: 20%;\\n    color: black\\n  }\\n\\nh1 {\\n    font-size: 7em;\\n    text-align: center;\\n    text-transform: uppercase;\\n    color: black;\\n  }\\n\\n.title {\\n    margin-left: 450px;\\n  }\\n\\n#general-information .text {\\n    font-size: 2em;\\n    font-weight: 100;\\n    margin: 20px 0;\\n    text-align: center;\\n  }\\n\\nh3 {\\n    font-size: 4.2em;\\n    text-align: center;\\n  }\\n\\n.background {\\n    background-color: #f44336;\\n    color: #fff;\\n  }\\n\\n* {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nbody {\\n  font-family: 'Roboto', sans-serif;\\n  font-size: 10px;\\n  line-height: 3.5em;\\n  font-weight: 300;\\n}\\n\\nh1, h2, h3, h4, h5 {\\n  font-family: 'Roboto', sans-serif;\\n}\\n\\nh2 {\\n  color: #fff;\\n  font-size: 5em;\\n  line-height: 4em;\\n  text-align: center;\\n  text-shadow: #020819 6px -2px 6px;\\n  text-transform: uppercase;\\n}\\n\\nh4 {\\n  font-size: 1.5em;\\n  letter-spacing: 0.4px;\\n  margin-bottom: 15px;\\n}\\n\\nh5 {\\n  font-size: 1.2em;\\n}\\n\\n.link-btn {\\n  background-color: rgb(67, 163, 230);\\n  border: 2px solid rgba(0, 0, 0, 0.2);\\n  color: #fff;\\n  display: block;\\n  font-family: 'Roboto Condensed';\\n  font-size: 2em;\\n  letter-spacing: 0.5px;\\n  margin: 40px auto 0;\\n  padding: 14px 20px;\\n  text-align: center;\\n  text-decoration: none;\\n  width: 150px;\\n}\\n\\n.container {\\n  margin: 0 auto;\\n  padding: 75px 0;\\n  width: 1200px;\\n}\\n\\n.clearfix {\\n  clear: both;\\n}\\n\\n.col {\\n  float: left;\\n}\\n\\n.col-3 {\\n  width: 30%;\\n}\\n\\n.col-middle {\\n  margin: 0 5%;\\n}\\n\\n.service-box {\\n  border: 2px solid #eee;\\n  border-radius: 20px;\\n  box-sizing: border-box;\\n  box-shadow: 2px 2px 10px 0 #eee;\\n  font-size: 1.7em;\\n  margin: 50px 5% 0;\\n  padding: 20px;\\n  text-align: center;\\n  width: 40%;\\n}\\n\\n.service-box .img {\\n  width: 125px;\\n}\\n\\n#team .section-text {\\n  font-size: 1.9em;\\n  margin: 10px auto;\\n  text-align: center;\\n  width: 60%\\n}\\n\\n#team hr {\\n  margin: 20px auto 30px;\\n  width: 40%;\\n}\\n\\n#team .member-name {\\n  display: block;\\n  font-size: 1.5em;\\n  font-weight: 700;\\n  text-align: center;\\n}\\n\\n.schedule-table {\\n  font-size: 1.5em;\\n  margin: 0 auto 40px;\\n}\\n\\n.schedule-table th,\\n.schedule-table td {\\n  border-bottom: 1px solid #000;\\n  padding: 5px 10px;\\n}\\n\\n.slot-form-container {\\n  font-size: 1.5em;\\n  margin: 18px auto 0;\\n  text-align: center;\\n  width: 40%;\\n}\\n\\n.slot-form-container label {\\n  display: block;\\n  line-height: 15px;\\n  margin-bottom: 0;\\n}\\n\\n.slot-form-container input,\\n.slot-form-container select {\\n  height: 20px;\\n  outline: none;\\n  padding: 3px;\\n  width: 100%;\\n}\\n\\n.slot-form-container button {\\n  background: #fff;\\n  border: 1px solid #000;\\n  color: #000;\\n  margin-top: 15px;\\n  padding: 9px;\\n}\\n\\n.footer {\\n  font-size: 1.9em;\\n  margin-bottom: 25px;\\n  padding: 0 100px;\\n  text-align: center;\\n}\\n\\n.footer .address {\\n  font-style: normal;\\n  font-size: 0.8em;\\n  margin-bottom: 30px;\\n}\\n\\n.footer .follow-us-item {\\n  list-style-type: none;\\n}\\n\\n.footer .link {\\n  color: rgb(67, 163, 230);\\n  text-decoration: none;\\n}\\n\\n.footer .map-frame {\\n  height: 375px;\\n  float: right;\\n  width: 60%;\\n}\\n \"","module.exports = \"<header class=\\\"header\\\">\\n  <div class=\\\"title\\\">\\n    <h1>Building +</h1>\\n  </div>\\n  \\n    <aside class=\\\"quote\\\">\\n      <i>\\\"Make Managing Properties A Better Experience\\\"</i><br />\\n      Jack Jerome\\n    </aside>\\n  </header>\\n\\n  <section id=\\\"general-information\\\" class=\\\"background\\\">\\n      <div class=\\\"container\\\">\\n        <article class=\\\"col col-3\\\">\\n          <h3>Hello!</h3>\\n          <p class=\\\"text\\\">Welcome to Building+</p>\\n    \\n          <a class=\\\"link-btn\\\" href=\\\"#\\\">Learn More</a>\\n        </article>\\n    \\n        <article class=\\\"col col-3\\\">\\n          <h3>About us</h3>\\n          <p class=\\\"text\\\"> property manager.</p>\\n    \\n          <a class=\\\"link-btn\\\" href=\\\"#\\\">Watch Video</a>\\n        </article>\\n    \\n        <article class=\\\"col col-3\\\">\\n          <h3>Let's Try</h3>\\n          <p class=\\\"text\\\">It's Free</p>\\n    \\n          <a class=\\\"link-btn\\\" routerLink=\\\"/signup\\\">Register</a>\\n        </article>\\n    \\n        <div class=\\\"clearfix\\\"></div>\\n      </div>\\n    </section>\\n\\n    <section id=\\\"structure\\\" class=\\\"container\\\">\\n        <article class=\\\"col service-box\\\">\\n          <img src=\\\"https://thumb.ibb.co/miyXdo/connection.png\\\" alt=\\\"details\\\" class=\\\"img\\\" />\\n\\n          <h4>1. Details</h4>\\n          <p>you have all the nessecary details of the building</p>\\n        </article>\\n      \\n        <article class=\\\"col service-box\\\">\\n          <img src=\\\"https://thumb.ibb.co/iMYJjT/teamwork_1.png\\\" alt=\\\"residents\\\" class=\\\"img\\\" />\\n          <h4>2. Residents</h4>\\n          <p>You add residents, by adding deleting and deleting</p>\\n        </article>\\n      \\n        <article class=\\\"col service-box\\\">\\n          <img src=\\\"https://thumb.ibb.co/mxpVyo/question.png\\\" alt=\\\"suggestion\\\" class=\\\"img\\\" />\\n          <h4>3. Suggestions</h4>\\n          <p>Every suggestion you collect, can be added to and tracked</p>\\n        </article>\\n      \\n        <article class=\\\"col service-box\\\">\\n          <img src=\\\"https://thumb.ibb.co/hG8JjT/money_bag.png\\\" alt=\\\"payments\\\" class=\\\"img\\\" />\\n\\n          <h4>4. Payments</h4>\\n          <p>Check who have payed made the payments</p>\\n        </article>\\n      \\n        <div class=\\\"clearfix\\\"></div>\\n      </section>\\n\\n      <footer class=\\\"background footer\\\">\\n          <div class=\\\"container\\\">\\n            <section class=\\\"col col-3\\\">\\n              <h5>Contact Information</h5>\\n              <address class=\\\"address\\\">\\n                Building+<br />\\n                33 Rue la Fayette,<br />\\n                75009 Paris,<br />\\n                France<br />\\n                +33 (0) 619 193 088\\n              </address>\\n        \\n              <h5>Follow Us</h5>\\n              <ul>\\n                <li class=\\\"follow-us-item\\\"><a class=\\\"link\\\" href=\\\"http://www.twitter.com\\\" target='_blank'>Twitter</a></li>\\n                <li class=\\\"follow-us-item\\\"><a class=\\\"link\\\" href=\\\"http://www.facebook.com\\\" target='_blank'>Facebook</a></li>\\n                <li class=\\\"follow-us-item\\\"><a class=\\\"link\\\" href=\\\"http://www.instagram.com\\\" target='_blank'>Instagram</a></li>\\n              </ul>\\n            </section>\\n        \\n            <iframe src=\\\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2624.142047755348!2d2.3354220160472316!3d48.87456477928921!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x47e66e38f817b573%3A0x48d69c30470e7aeb!2sIronhack!5e0!3m2!1sen!2ses!4v1495208746099\\\" class=\\\"map-frame\\\" frameborder=\\\"0\\\" style=\\\"border:0\\\" allowfullscreen></iframe>\\n            <div class=\\\"clearfix\\\"></div>\\n          </div>\\n        </footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css']\n})\nexport class LandingPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".loginform {\\n    margin-top: 50px;\\n}\\n\\nmat-form-field {\\n    width: 300px;\\n  }\\n\\n.text {\\n    font-size: 30px;\\n    text-align: center;\\n}\"","module.exports = \"<section class=\\\"loginform\\\">\\n  \\n  \\n  <form (ngSubmit)=\\\"loginSubmit()\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\n      <mat-form-field class=\\\"text\\\">\\n      Email\\n      <input [(ngModel)]=\\\"loginForm.email\\\" matInput name=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"\\\" />\\n    </mat-form-field> \\n    <br />\\n  \\n    <mat-form-field class=\\\"text\\\">\\n      Password\\n      <input [(ngModel)]=\\\"loginForm.loginPassword\\\" matInput name=\\\"loginPassword\\\" type=\\\"password\\\" placeholder=\\\"\\\" />\\n    </mat-form-field> \\n    <br />\\n  \\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"warn\\\">Log In</button>\\n  </form>\\n</section>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { LoginSubmission, AuthService } from '../api/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: LoginSubmission = new LoginSubmission();\n\n  constructor(\n    public myAuthServ: AuthService,\n    public myRouterServ: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n\n  loginSubmit() {\n    // pass the form inputs to the service\n    this.myAuthServ.postLogin(this.loginForm)\n      .then((response) => {\n        // redirect away to the home page\n        this.myRouterServ.navigateByUrl(\"/building\");\n      })\n      .catch((err) => {\n        alert(\"Sorry! There was a problem with your login. 😓\");\n        console.log(err);\n      });\n}\n \n}\n","import { NgModule } from '@angular/core';\nimport { \n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatCardModule\n} from '@angular/material';\n\n\n@NgModule({\n  imports: [MatButtonModule, MatIconModule, MatFormFieldModule, MatInputModule, MatTabsModule, MatToolbarModule, MatCardModule],\n  exports: [MatButtonModule, MatIconModule, MatFormFieldModule, MatInputModule, MatTabsModule, MatToolbarModule, MatCardModule]\n})\nexport class MaterialModule {} ","module.exports = \"\"","module.exports = \"<p>\\n  not-found-page works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found-page',\n  templateUrl: './not-found-page.component.html',\n  styleUrls: ['./not-found-page.component.css']\n})\nexport class NotFoundPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"mat-form-field {\\n    width: 300px;\\n  }\\n\\n.signupform {\\n   margin-top: 50px;\\n   font-size: 20px\\n  }\"","module.exports = \"<section class=\\\"signupform\\\">\\n\\n  <form (ngSubmit)=\\\"signupSubmit()\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"10px\\\">\\n    First Name\\n    <mat-form-field>\\n      <input [(ngModel)]=\\\"signupForm.firstName\\\" matInput name=\\\"firstName\\\" type=\\\"text\\\" placeholder=\\\"Ghaith\\\" />\\n    </mat-form-field> \\n    <br /> \\n  \\n    Last Name\\n    <mat-form-field>\\n      <input [(ngModel)]=\\\"signupForm.lastName\\\" matInput name=\\\"lastName\\\" type=\\\"text\\\" placeholder=\\\"Hannachi\\\" />\\n    </mat-form-field>\\n    <br />\\n  \\n    Email\\n    <mat-form-field>\\n      <input [(ngModel)]=\\\"signupForm.email\\\" matInput name=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"jessica@jones.com\\\" required />\\n      <mat-error>Email is invalid</mat-error>\\n  </mat-form-field>\\n  <br />\\n\\n  Password\\n  <mat-form-field hintLabel=\\\"Should be at least 6 character long.\\\">\\n    <input [(ngModel)]=\\\"signupForm.originalPassword\\\" matInput name=\\\"originalPassword\\\" type=\\\"password\\\" placeholder=\\\"Your secret is safe with us\\\" minlength=\\\"6\\\" #pwInput=\\\"ngModel\\\" required />\\n    <mat-error>Has to be at least 6 characters long.</mat-error><mat-hint align=\\\"end\\\"> {{ pwInput.value?.length }} / 6 </mat-hint>\\n  </mat-form-field>\\n  <br />\\n  \\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"warn\\\">Sign Up</button>\\n  </form>\\n</section>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n\nimport { SignupSubmission, AuthService } from '../api/auth.service';\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  signupForm: SignupSubmission = new SignupSubmission();\n\n  constructor(\n    public myAuthServ: AuthService,\n    private myRouterServ: Router\n  ) { }\n\n  ngOnInit() {\n  }\n  \n  signupSubmit() {\n    // pass the form inputs to the service\n    this.myAuthServ.postSignup(this.signupForm)\n      .then((response) => {\n        // redirect away to the home page\n        this.myRouterServ.navigateByUrl(\"/building\");\n      })\n      .catch((err) => {\n        alert(\"Sorry! We couldn't sign you up. 🧐\");\n        console.log(err);\n      });\n  }  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backendUrl: \"http://localhost:3000\"\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}